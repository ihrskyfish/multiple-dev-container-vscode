version: '3'
services:
  api:
    image: mcr.microsoft.com/devcontainers/python:1-3.12-bookworm
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached
    command: sleep infinity
    links:
      - app
    # ...

  app:
    image: mcr.microsoft.com/devcontainers/typescript-node:1-20-bookworm
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached
    command: sleep infinity
    # ...
  dev0app0backend:
    hostname: dev0app0backend
    build: 
      context: .devcontainer/jzzx-dev # default is not  dockerfile's path
      dockerfile: Dockerfile
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached
    deploy:
      # placement:
      #   constraints:
      #     - node.hostname == debian0kvm
      resources:
        limits:
          memory: 22G
        reservations:
          memory: 1G
    
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    networks:
      - dev0app-network
  mysql:
    hostname: dev0mysql
    image: mysql:5.7
    deploy:
      placement:
        constraints:
          - node.hostname == debian0kvm
    environment:
      MYSQL_ROOT_PASSWORD: 1qazXSW@  # 根据配置文件中的密码设置
      # MYSQL_USER: root               # 根据配置文件中的用户名设置
      # MYSQL_PASSWORD: 1qazXSW@       # 根据配置文件中的密码设置
      # MYSQL_ROOT_HOST: '%'  # 允许从任何 IP 地址访问
      MYSQL_DATABASE: mmcc           # 根据配置文件中的数据库名设置
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    # volumes:
    #   - mysql-data:/var/lib/mysql    # 持久化数据
    networks:
      - dev0app-network

  redis:
    hostname: dev0redis
    image: redis:6.2
    deploy:
      placement:
        constraints:
          - node.hostname == debian0kvm
    environment:
      REDIS_PASSWORD: 123456         # 根据配置文件中的密码设置
    command:
      - --requirepass "123456"
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: host
    # volumes:
    #   - redis-data:/data             # 持久化数据
    networks:
      - dev0app-network

  minio:
    hostname: dev0minio
    image: minio/minio:latest
    deploy:
      placement:
        constraints:
          - node.hostname == debian0kvm
    environment:
      MINIO_ACCESS_KEY: wocai        # 根据配置文件中的 accessKey 设置
      MINIO_SECRET_KEY: 1qazXSo@     # 根据配置文件中的 secretKey 设置
    ports:
      - target: 9000
        published: 9000
        protocol: tcp
        mode: host
    # volumes:
    #   - minio-data:/data             # 持久化数据
    command: server /data
    networks:
      - dev0app-network

volumes:
  mysql-data:
  redis-data:
  minio-data:


networks:
  dev0app-network:
    driver: bridge
